{"version":3,"sources":["app/reducers/actionsSlice.js","Components/Alert/index.js","app/api-client.js","app/auth.js","Pages/Login/index.js","Pages/Register/index.js","Pages/Logout/index.js","app/reducers/tasksThunks.js","Components/AddTaskForm/index.js","Components/Task/index.js","app/reducers/filtersSlice.js","app/reducers/tasksSlice.js","Containers/TasksList/index.js","Components/TasksToDoCounter/index.js","Containers/FiltersList/index.js","Components/ClearCompletedButton/index.js","Containers/ControlsPanel/index.js","Pages/Main/index.js","Pages/NoMatch/index.js","Containers/NavBar/index.js","App.js","app/store.js","index.js"],"names":["actionsSlice","createSlice","name","initialState","requestStatus","alert","undefined","reducers","setBusy","state","setIdle","setAlert","action","payload","actions","selectRequestStatus","selectAlert","Alert","useSelector","message","alertType","className","role","client","endpoint","a","body","customConfig","token","window","localStorage","getItem","localStorageKey","headers","Authorization","config","method","JSON","stringify","fetch","process","response","status","removeItem","json","data","ok","Promise","reject","get","post","patch","delete","authContext","createContext","ProvideAuth","children","auth","dispatch","useDispatch","useState","isAuthenticated","setIsAuthenticated","signIn","username","password","setItem","r","setTimeout","signOut","signUp","history","push","useProvideAuth","Provider","value","useAuth","useContext","PrivateRoute","inv","rest","render","location","to","pathname","from","Login","fields","setFields","onUsernameChanged","useCallback","e","target","onPasswordChanged","canSave","useMemo","length","onFormSubmit","preventDefault","onSubmit","htmlFor","type","onChange","id","disabled","Register","useHistory","Logout","useEffect","fetchTasks","createAsyncThunk","addNewTask","initialTask","updateTask","update","deleteTask","task_id","markAllTasksCompleted","completed","deleteCompletedTasks","AddTaskForm","content","setContent","onContentChanged","onEnterPressed","key","resultAction","unwrapResult","console","error","placeholder","onKeyUp","maxLength","React","memo","task","onCheckboxChange","onDeleteTask","icon","faCheckCircle","faCircle","onClick","faTrashAlt","filtersSlice","list","active","currentFilter","setCurrent","Object","values","forEach","filter","selectFiltersList","filters","selectCurrentFilter","tasksAdapter","createEntityAdapter","getInitialState","modifyPayload","map","obj","defineProperty","getOwnPropertyDescriptor","tasksSlice","extraReducers","thunks","pending","fulfilled","upsertMany","rejected","addMany","removeOne","entities","idsToDelete","reduce","acc","removeMany","getSelectors","tasks","selectAllTasks","selectAll","selectTasksCount","selectTotal","selectTasksByFilter","createSelector","tasksFilter","selectNumOfTasksToDo","TasksList","tasksStatus","filterCondition","Error","TasksToDoCounter","numOfTasksToDo","onMarkAllCompleted","Filter","FiltersList","ClearCompletedButton","completedTasks","display","onClearCompleted","ControlsPanel","Main","NoMatch","useLocation","NavBar","authenticated","exact","App","forceRefresh","path","configureStore","reducer","tasksReducer","filtersReducer","actionsReducer","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c944439a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const actionsSlice = createSlice({\n  name: 'actions',\n  initialState: {\n    requestStatus: 'idle',\n    alert: undefined,\n  },\n  reducers: {\n    setBusy: (state) => {\n      state.requestStatus = 'pending';\n    },\n    setIdle: (state) => {\n      state.requestStatus = 'idle';\n    },\n    setAlert: (state, action) => {\n      state.alert = { ...action.payload };\n    },\n  },\n});\n\nexport const { setBusy, setIdle, setAlert } = actionsSlice.actions;\n\nexport const selectRequestStatus = (state) => state.actions.requestStatus;\n\nexport const selectAlert = (state) => state.actions.alert;\n\nexport default actionsSlice.reducer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectAlert } from '../../app/reducers/actionsSlice';\n\nexport default function Alert() {\n  const { message, alertType } = useSelector(selectAlert);\n\n  return (\n    <div className={'alert ' + alertType} role=\"alert\">\n      {message}\n    </div>\n  );\n}\n","// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nimport { localStorageKey } from './auth';\n\nexport async function client(endpoint, { body, ...customConfig } = {}) {\n  const token = window.localStorage.getItem(localStorageKey);\n  const headers = { 'Content-Type': 'application/json' };\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n    },\n  };\n\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n\n  try {\n    const response = await window.fetch(\n      `${process.env.REACT_APP_REST_SERVER_URL}${endpoint}`,\n      config\n    );\n    if (response.status === 401) {\n      window.localStorage.removeItem(localStorageKey);\n    }\n    const data = await response.json();\n    if (response.ok) {\n      return data;\n    }\n    return Promise.reject(data.message);\n  } catch (err) {\n    return Promise.reject(err.message);\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig });\n};\n\nclient.post = function (endpoint, body, customConfig = {}) {\n  return client(endpoint, { ...customConfig, body });\n};\n\nclient.patch = function (endpoint, body, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: 'PATCH', body });\n};\n\nclient.delete = function (endpoint, body = {}, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: 'DELETE', body });\n};\n","import React, { createContext, useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { client } from './api-client';\nimport { setAlert } from './reducers/actionsSlice';\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\n\nconst authContext = createContext();\nexport const localStorageKey = 'auth_token';\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nfunction useProvideAuth() {\n  const token = window.localStorage.getItem(localStorageKey);\n\n  const dispatch = useDispatch();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(!!token);\n\n  const signIn = async (username, password) => {\n    try {\n      const response = await client.post('/users/login', {\n        username,\n        password,\n      });\n      localStorage.setItem(localStorageKey, response.data.token);\n      dispatch(\n        setAlert({ message: response.message, alertType: 'alert-success' })\n      );\n      await new Promise((r) => setTimeout(r, 2000));\n      setIsAuthenticated(true);\n    } catch (err) {\n      dispatch(\n        setAlert({\n          message: `Failed to login: ${err}`,\n          alertType: 'alert-danger',\n        })\n      );\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      const response = await client.get('/users/logout');\n      localStorage.removeItem(localStorageKey);\n      dispatch(\n        setAlert({ message: response.message, alertType: 'alert-success' })\n      );\n      await new Promise((r) => setTimeout(r, 1000));\n      setIsAuthenticated(false);\n    } catch (err) {\n      dispatch(\n        setAlert({\n          message: `Failed to logout: ${err}`,\n          alertType: 'alert-danger',\n        })\n      );\n    }\n  };\n\n  const signUp = async (username, password, history) => {\n    try {\n      const response = await client.post('/users/register', {\n        username,\n        password,\n      });\n      dispatch(\n        setAlert({ message: response.message, alertType: 'alert-success' })\n      );\n      await new Promise((r) => setTimeout(r, 1000));\n      history.push('/login');\n    } catch (err) {\n      dispatch(\n        setAlert({\n          message: `Failed to register: ${err}`,\n          alertType: 'alert-danger',\n        })\n      );\n    }\n  };\n\n  return {\n    isAuthenticated,\n    signIn,\n    signUp,\n    signOut,\n  };\n}\n\nexport function PrivateRoute({ children, inv = false, ...rest }) {\n  /**                  |  private  |  inverse private\n   * authenticated     |   child   |     \"/\"\n   * not authenticated | \"/login\"  |    child\n   */\n  const auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.isAuthenticated === !inv ? (\n          children\n        ) : (\n          <Redirect\n            to={\n              inv\n                ? '/'\n                : {\n                    pathname: '/login',\n                    state: { from: location },\n                  }\n            }\n          />\n        )\n      }\n    />\n  );\n}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectRequestStatus,\n  selectAlert,\n  setBusy,\n  setIdle,\n} from '../../app/reducers/actionsSlice';\nimport Alert from '../../Components/Alert';\nimport { useAuth } from '../../app/auth';\n\nexport default function Login() {\n  const [fields, setFields] = useState({ username: '', password: '' });\n\n  const auth = useAuth();\n\n  const requestStatus = useSelector(selectRequestStatus);\n  const alert = useSelector(selectAlert);\n\n  const dispatch = useDispatch();\n\n  const onUsernameChanged = useCallback(\n    (e) => setFields({ username: e.target.value, password: fields.password }),\n    [fields.password]\n  );\n\n  const onPasswordChanged = useCallback(\n    (e) => setFields({ password: e.target.value, username: fields.username }),\n    [fields.username]\n  );\n\n  const canSave = useMemo(\n    () =>\n      0 < fields.username.length &&\n      0 < fields.password.length &&\n      requestStatus === 'idle',\n    [fields, requestStatus]\n  );\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n    if (canSave) {\n      dispatch(setBusy());\n      await auth.signIn(fields.username, fields.password);\n      dispatch(setIdle());\n    }\n  };\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      {alert && <Alert />}\n      <div className=\"form-group\">\n        <label htmlFor=\"inputUsername\">Username</label>\n        <input\n          type=\"username\"\n          value={fields.username}\n          onChange={onUsernameChanged}\n          className=\"form-control\"\n          id=\"inputUsername\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"inputPassword\">Password</label>\n        <input\n          type=\"password\"\n          value={fields.password}\n          onChange={onPasswordChanged}\n          className=\"form-control\"\n          id=\"inputPassword\"\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-secondary\" disabled={!canSave}>\n        Login\n      </button>\n    </form>\n  );\n}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  selectRequestStatus,\n  selectAlert,\n  setBusy,\n  setIdle,\n} from '../../app/reducers/actionsSlice';\nimport Alert from '../../Components/Alert';\nimport { useAuth } from '../../app/auth';\n\nexport default function Register() {\n  const [fields, setFields] = useState({ username: '', password: '' });\n\n  const auth = useAuth();\n  const history = useHistory();\n\n  const requestStatus = useSelector(selectRequestStatus);\n  const alert = useSelector(selectAlert);\n\n  const dispatch = useDispatch();\n\n  const onUsernameChanged = useCallback(\n    (e) => setFields({ username: e.target.value, password: fields.password }),\n    [fields.password]\n  );\n\n  const onPasswordChanged = useCallback(\n    (e) => setFields({ password: e.target.value, username: fields.username }),\n    [fields.username]\n  );\n\n  const canSave = useMemo(\n    () =>\n      0 < fields.username.length &&\n      0 < fields.password.length &&\n      requestStatus === 'idle',\n    [fields, requestStatus]\n  );\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n    if (canSave) {\n      dispatch(setBusy());\n      await auth.signUp(fields.username, fields.password, history);\n      dispatch(setIdle());\n    }\n  };\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      {alert && <Alert />}\n      <div className=\"form-group\">\n        <label htmlFor=\"inputUsername\">Username</label>\n        <input\n          type=\"username\"\n          value={fields.username}\n          onChange={onUsernameChanged}\n          className=\"form-control\"\n          id=\"inputUsername\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"inputPassword\">Password</label>\n        <input\n          type=\"password\"\n          value={fields.password}\n          onChange={onPasswordChanged}\n          className=\"form-control\"\n          id=\"inputPassword\"\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-secondary\" disabled={!canSave}>\n        Register\n      </button>\n    </form>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectRequestStatus,\n  selectAlert,\n  setBusy,\n  setIdle,\n} from '../../app/reducers/actionsSlice';\nimport Alert from '../../Components/Alert';\nimport { useAuth } from '../../app/auth';\n\nexport default function Logout() {\n  const auth = useAuth();\n\n  const requestStatus = useSelector(selectRequestStatus);\n  const alert = useSelector(selectAlert);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      if (requestStatus === 'idle') {\n        dispatch(setBusy());\n        await auth.signOut();\n        dispatch(setIdle());\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [auth.isAuthenticated]);\n\n  return alert ? (\n    <Alert />\n  ) : (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Processing...</span>\n      </div>\n    </div>\n  );\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { client } from '../api-client';\n\nexport const fetchTasks = createAsyncThunk('tasks/fetchTasks', async () => {\n  const response = await client.get('/tasks/list');\n  return response.data;\n});\n\nexport const addNewTask = createAsyncThunk(\n  'tasks/addNewTask',\n  async (initialTask) => {\n    const response = await client.post('/tasks/create', { ...initialTask });\n    return response.data;\n  }\n);\n\nexport const updateTask = createAsyncThunk(\n  'tasks/updateTask',\n  async (update) => {\n    const response = await client.patch(`/tasks/${update['id']}/update`, {\n      ...update,\n    });\n    return response.data;\n  }\n);\n\nexport const deleteTask = createAsyncThunk(\n  'tasks/deleteTask',\n  async (task_id) => {\n    const response = await client.delete(`/tasks/${task_id}/delete`);\n    return response.data;\n  }\n);\n\nexport const markAllTasksCompleted = createAsyncThunk(\n  'tasks/markAllTasksCompleted',\n  async () => {\n    const response = await client.patch('/tasks/list/update', {\n      completed: true,\n    });\n    return response.data;\n  }\n);\n\nexport const deleteCompletedTasks = createAsyncThunk(\n  'tasks/deleteCompletedTasks',\n  async () => {\n    const response = await client.delete('/tasks/list/delete', {\n      completed: true,\n    });\n    return response.data;\n  }\n);\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nimport { addNewTask } from '../../app/reducers/tasksThunks';\nimport {\n  selectRequestStatus,\n  setBusy,\n  setIdle,\n} from '../../app/reducers/actionsSlice';\n\nexport default function AddTaskForm() {\n  const [content, setContent] = useState('');\n  const requestStatus = useSelector(selectRequestStatus);\n\n  const dispatch = useDispatch();\n\n  const onContentChanged = useCallback((e) => setContent(e.target.value), [\n    setContent,\n  ]);\n\n  const canSave = useMemo(\n    () =>\n      0 < content.length && content.length <= 120 && requestStatus === 'idle',\n    [content, requestStatus]\n  );\n\n  const onEnterPressed = async (e) => {\n    if (e.key === 'Enter' && canSave) {\n      try {\n        dispatch(setBusy());\n        const resultAction = await dispatch(addNewTask({ content }));\n        unwrapResult(resultAction);\n        setContent('');\n      } catch (err) {\n        console.error('Failed to save the task: ', err);\n      } finally {\n        dispatch(setIdle());\n      }\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center mx-4 mb-3 p-2 border-bottom\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter your task name here\"\n        value={content}\n        onChange={onContentChanged}\n        onKeyUp={onEnterPressed}\n        className=\"col border-0\"\n        maxLength=\"120\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\n\nimport { deleteTask, updateTask } from '../../app/reducers/tasksThunks';\nimport {\n  selectRequestStatus,\n  setBusy,\n  setIdle,\n} from '../../app/reducers/actionsSlice';\n\nexport default React.memo(function Task({ task }) {\n  const requestStatus = useSelector(selectRequestStatus);\n\n  const dispatch = useDispatch();\n\n  const onCheckboxChange = async () => {\n    if (requestStatus === 'idle') {\n      try {\n        dispatch(setBusy());\n        const resultAction = await dispatch(\n          updateTask({ id: task.id, completed: !task.completed })\n        );\n        unwrapResult(resultAction);\n      } catch (err) {\n        console.error('Failed to update the task: ', err);\n      } finally {\n        dispatch(setIdle());\n      }\n    }\n  };\n\n  const onDeleteTask = async () => {\n    if (requestStatus === 'idle') {\n      try {\n        dispatch(setBusy());\n        const resultAction = await dispatch(deleteTask(task.id));\n        unwrapResult(resultAction);\n      } catch (err) {\n        console.error('Failed to delete the task: ', err);\n      } finally {\n        dispatch(setIdle());\n      }\n    }\n  };\n\n  return (\n    <div\n      className={\n        'row justify-content-center mx-0 border-bottom' +\n        (task.completed ? ' completed' : '')\n      }\n      key={task.id}\n    >\n      <FontAwesomeIcon\n        icon={task.completed ? faCheckCircle : faCircle}\n        onClick={onCheckboxChange}\n        className=\"col-2 align-self-center my-3 checkboxIcon\"\n      />\n      <p className=\"col-8 align-self-center py-2 my-2 text-break\">\n        {task.content}\n      </p>\n      <FontAwesomeIcon\n        icon={faTrashAlt}\n        onClick={onDeleteTask}\n        className=\"col-2 align-self-center my-3 trash-button\"\n      />\n    </div>\n  );\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const filtersSlice = createSlice({\n  name: 'filters',\n  initialState: {\n    list: [\n      { id: 'SHOW_ALL', name: 'All', active: true },\n      { id: 'SHOW_TODO', name: 'ToDo', active: false },\n      { id: 'SHOW_COMPLETED', name: 'Completed', active: false },\n    ],\n    currentFilter: 'SHOW_ALL',\n  },\n  reducers: {\n    setCurrent: (state, action) => {\n      state.currentFilter = action.payload;\n      Object.values(state.list).forEach((filter) => {\n        filter.active = filter.id === state.currentFilter;\n      });\n    },\n  },\n});\n\nexport const { setCurrent } = filtersSlice.actions;\n\nexport const selectFiltersList = (state) => state.filters.list;\nexport const selectCurrentFilter = (state) => state.filters.currentFilter;\n\nexport default filtersSlice.reducer;\n","import {\n  createEntityAdapter,\n  createSelector,\n  createSlice,\n} from '@reduxjs/toolkit';\nimport * as thunks from './tasksThunks';\n\nconst tasksAdapter = createEntityAdapter();\n\nconst initialState = tasksAdapter.getInitialState({\n  status: 'idle',\n});\n\nfunction modifyPayload(payload) {\n  // change mongodb ids to redux ids format\n  return payload.map((obj) => {\n    Object.defineProperty(\n      obj,\n      'id',\n      Object.getOwnPropertyDescriptor(obj, '_id')\n    );\n    delete obj['_id'];\n    return obj;\n  });\n}\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [thunks.fetchTasks.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [thunks.fetchTasks.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      tasksAdapter.upsertMany(state, modifyPayload(action.payload));\n    },\n    [thunks.fetchTasks.rejected]: (state, action) => {\n      state.status = 'failed';\n    },\n    [thunks.addNewTask.fulfilled]: (state, action) => {\n      tasksAdapter.addMany(state, modifyPayload(action.payload));\n    },\n    [thunks.updateTask.fulfilled]: (state, action) => {\n      tasksAdapter.upsertMany(state, modifyPayload(action.payload));\n    },\n    [thunks.deleteTask.fulfilled]: (state, action) => {\n      tasksAdapter.removeOne(state, action.payload[0]['_id']);\n    },\n    [thunks.markAllTasksCompleted.fulfilled]: (state, action) => {\n      Object.values(state.entities).forEach((task) => {\n        task.completed = true;\n      });\n    },\n    [thunks.deleteCompletedTasks.fulfilled]: (state, action) => {\n      const idsToDelete = Object.values(state.entities).reduce((acc, task) => {\n        if (task.completed === true) {\n          acc.push(task.id);\n        }\n        return acc;\n      }, []);\n      tasksAdapter.removeMany(state, idsToDelete);\n    },\n  },\n});\n\nexport default tasksSlice.reducer;\n\nexport const {\n  selectAll: selectAllTasks,\n  selectTotal: selectTasksCount,\n} = tasksAdapter.getSelectors((state) => state.tasks);\n\nexport const selectTasksByFilter = createSelector(\n  [selectAllTasks, (state, tasksFilter) => tasksFilter],\n  (tasks, tasksFilter) =>\n    tasksFilter === null\n      ? tasks\n      : tasks.filter((task) => task.completed === tasksFilter)\n);\n\nexport const selectNumOfTasksToDo = createSelector(\n  selectAllTasks,\n  (tasks) => tasks.filter((task) => !task.completed).length\n);\n","import React, { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nimport Task from '../../Components/Task';\nimport { selectCurrentFilter } from '../../app/reducers/filtersSlice';\nimport { selectTasksByFilter } from '../../app/reducers/tasksSlice';\nimport { fetchTasks } from '../../app/reducers/tasksThunks';\nimport Alert from '../../Components/Alert';\nimport { selectAlert, setAlert } from '../../app/reducers/actionsSlice';\n\nexport default function TasksList() {\n  const currentFilter = useSelector(selectCurrentFilter);\n  const alert = useSelector(selectAlert);\n  const { status: tasksStatus } = useSelector((state) => state.tasks);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (tasksStatus === 'idle') {\n      (async () => {\n        try {\n          const resultAction = await dispatch(fetchTasks());\n          unwrapResult(resultAction);\n        } catch (err) {\n          dispatch(\n            setAlert({\n              message: `Failed to get tasks: ${err.message}`,\n              alertType: 'alert-danger',\n            })\n          );\n        }\n      })();\n    }\n  }, [tasksStatus, dispatch]);\n\n  const filterCondition = useMemo(() => {\n    switch (currentFilter) {\n      case 'SHOW_ALL':\n        return null;\n      case 'SHOW_TODO':\n        return false;\n      case 'SHOW_COMPLETED':\n        return true;\n      default:\n        throw new Error('Unknown filter: ' + currentFilter);\n    }\n  }, [currentFilter]);\n\n  const tasks = useSelector((state) =>\n    selectTasksByFilter(state, filterCondition)\n  );\n\n  return (\n    <div className=\"overflow-auto tasks-list\">\n      {tasksStatus === 'loading' && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"progress w-50\">\n            <div\n              className=\"progress-bar progress-bar-striped progress-bar-animated bg-secondary w-100\"\n              role=\"progressbar\"\n            >\n              Loading...\n            </div>\n          </div>\n        </div>\n      )}\n      {tasksStatus === 'succeeded' &&\n        tasks.map((task) => <Task key={task.id} task={task} />)}\n      {tasksStatus === 'failed' && alert && (\n        <div className=\"d-flex justify-content-center\">\n          <Alert />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nimport { selectNumOfTasksToDo } from '../../app/reducers/tasksSlice';\nimport { markAllTasksCompleted } from '../../app/reducers/tasksThunks';\nimport {\n  selectRequestStatus,\n  setBusy,\n  setIdle,\n} from '../../app/reducers/actionsSlice';\n\nexport default function TasksToDoCounter() {\n  const requestStatus = useSelector(selectRequestStatus);\n  const numOfTasksToDo = useSelector(selectNumOfTasksToDo);\n\n  const dispatch = useDispatch();\n\n  const onMarkAllCompleted = async () => {\n    if (requestStatus === 'idle') {\n      try {\n        dispatch(setBusy());\n        const resultAction = await dispatch(markAllTasksCompleted());\n        unwrapResult(resultAction);\n      } catch (err) {\n        console.error('Failed to update list: ', err);\n      } finally {\n        dispatch(setIdle());\n      }\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onMarkAllCompleted}\n      className=\"col-3 btn control-buttons\"\n    >\n      {numOfTasksToDo} tasks left\n    </button>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFiltersList, setCurrent } from '../../app/reducers/filtersSlice';\n\nconst Filter = React.memo(function Filter({ filter }) {\n  const dispatch = useDispatch();\n\n  const setFilter = () => {\n    dispatch(setCurrent(filter.id));\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={setFilter}\n      className={\n        'btn px-2 control-buttons' + (filter.active ? ' active-border' : '')\n      }\n    >\n      {filter.name}\n    </button>\n  );\n});\n\nexport default function FiltersList() {\n  const filters = useSelector(selectFiltersList);\n\n  return (\n    <div className=\"col-6 d-flex justify-content-center flex-wrap\">\n      {filters.map((filter) => (\n        <Filter key={filter.id} filter={filter} />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nimport { selectTasksByFilter } from '../../app/reducers/tasksSlice';\nimport { deleteCompletedTasks } from '../../app/reducers/tasksThunks';\nimport {\n  selectRequestStatus,\n  setBusy,\n  setIdle,\n} from '../../app/reducers/actionsSlice';\n\nexport default function ClearCompletedButton() {\n  const requestStatus = useSelector(selectRequestStatus);\n  const completedTasks = useSelector((state) =>\n    selectTasksByFilter(state, true)\n  );\n\n  const dispatch = useDispatch();\n\n  const display = `${(!completedTasks.length && 'in') || ''}visible`;\n\n  const onClearCompleted = async () => {\n    if (requestStatus === 'idle') {\n      try {\n        dispatch(setBusy());\n        const resultAction = await dispatch(deleteCompletedTasks());\n        unwrapResult(resultAction);\n      } catch (err) {\n        console.error('Failed to delete completed: ', err);\n      } finally {\n        dispatch(setIdle());\n      }\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onClearCompleted}\n      className={'col-3 btn text-break control-buttons ' + display}\n    >\n      Clear completed\n    </button>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectTasksCount } from '../../app/reducers/tasksSlice';\nimport TasksToDoCounter from '../../Components/TasksToDoCounter';\nimport FiltersList from '../FiltersList';\nimport ClearCompletedButton from '../../Components/ClearCompletedButton';\n\nexport default function ControlsPanel() {\n  const tasksCount = useSelector(selectTasksCount);\n\n  if (tasksCount === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"row justify-content-center mx-0 my-3 flex-nowrap\">\n      <TasksToDoCounter />\n      <FiltersList />\n      <ClearCompletedButton />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport AddTaskForm from '../../Components/AddTaskForm';\nimport TasksList from '../../Containers/TasksList';\nimport ControlsPanel from '../../Containers/ControlsPanel';\n\nexport default function Main() {\n  return (\n    <>\n      <h2 className=\"text-center\">Your todo list</h2>\n      <div className=\"container mt-4 px-0 pt-4 pb-2 shadow rounded border\">\n        <AddTaskForm />\n        <TasksList />\n        <ControlsPanel />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useAuth } from '../../app/auth';\n\nexport default function NavBar() {\n  const authenticated = useAuth().isAuthenticated;\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" exact to=\"/\">\n            Home\n          </NavLink>\n        </li>\n        {!authenticated && (\n          <>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" exact to=\"/register\">\n                Register\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" exact to=\"/login\">\n                Login\n              </NavLink>\n            </li>\n          </>\n        )}\n        {authenticated && (\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" exact to=\"/logout\">\n              Logout\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Login from './Pages/Login';\nimport Register from './Pages/Register';\nimport Logout from './Pages/Logout';\nimport Main from './Pages/Main';\nimport NoMatch from './Pages/NoMatch';\nimport NavBar from './Containers/NavBar';\nimport { ProvideAuth, PrivateRoute } from './app/auth';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container p-3 app-container\">\n      <ProvideAuth>\n        <Router forceRefresh={true}>\n          <NavBar />\n\n          <Switch>\n            <PrivateRoute inv={true} exact path=\"/register\">\n              <Register />\n            </PrivateRoute>\n            <PrivateRoute inv={true} exact path=\"/login\">\n              <Login />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/logout\">\n              <Logout />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/\">\n              <Main />\n            </PrivateRoute>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </Router>\n      </ProvideAuth>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport tasksReducer from './reducers/tasksSlice';\nimport filtersReducer from './reducers/filtersSlice';\nimport actionsReducer from './reducers/actionsSlice';\n\nexport default configureStore({\n  reducer: {\n    tasks: tasksReducer,\n    filters: filtersReducer,\n    actions: actionsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}